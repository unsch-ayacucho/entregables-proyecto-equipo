package edu.pe.unsch.entities;
// Generated 8/06/2019 07:46:25 PM by Hibernate Tools 5.1.7.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Producto generated by hbm2java
 */
@Entity
@Table(name = "producto", catalog = "electro")
public class Producto implements java.io.Serializable {

	private Integer id;
	private Categoria categoria;
	private String nombre;
	private String codigo;
	private String descripcion;
	private String imagen;
	private Boolean destacado;
	private Boolean publico;
	private Boolean existencia;
	private Date creacion;
	private Date ordenado;
	private Float precio;
	private Set<Detallecompra> detallecompras = new HashSet<Detallecompra>(0);
	private Set<Cupon> cupons = new HashSet<Cupon>(0);

	public Producto() {
	}

	public Producto(Categoria categoria, String nombre, String codigo, String descripcion, String imagen,
			Boolean destacado, Boolean publico, Boolean existencia, Date creacion, Date ordenado, Float precio,
			Set<Detallecompra> detallecompras, Set<Cupon> cupons) {
		this.categoria = categoria;
		this.nombre = nombre;
		this.codigo = codigo;
		this.descripcion = descripcion;
		this.imagen = imagen;
		this.destacado = destacado;
		this.publico = publico;
		this.existencia = existencia;
		this.creacion = creacion;
		this.ordenado = ordenado;
		this.precio = precio;
		this.detallecompras = detallecompras;
		this.cupons = cupons;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_categoria")
	public Categoria getCategoria() {
		return this.categoria;
	}

	public void setCategoria(Categoria categoria) {
		this.categoria = categoria;
	}

	@Column(name = "nombre", length = 200)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "codigo", length = 200)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Column(name = "descripcion", length = 1000)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "imagen")
	public String getImagen() {
		return this.imagen;
	}

	public void setImagen(String imagen) {
		this.imagen = imagen;
	}

	@Column(name = "destacado")
	public Boolean getDestacado() {
		return this.destacado;
	}

	public void setDestacado(Boolean destacado) {
		this.destacado = destacado;
	}

	@Column(name = "publico")
	public Boolean getPublico() {
		return this.publico;
	}

	public void setPublico(Boolean publico) {
		this.publico = publico;
	}

	@Column(name = "existencia")
	public Boolean getExistencia() {
		return this.existencia;
	}

	public void setExistencia(Boolean existencia) {
		this.existencia = existencia;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creacion", length = 19)
	public Date getCreacion() {
		return this.creacion;
	}

	public void setCreacion(Date creacion) {
		this.creacion = creacion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ordenado", length = 19)
	public Date getOrdenado() {
		return this.ordenado;
	}

	public void setOrdenado(Date ordenado) {
		this.ordenado = ordenado;
	}

	@Column(name = "precio", precision = 12, scale = 0)
	public Float getPrecio() {
		return this.precio;
	}

	public void setPrecio(Float precio) {
		this.precio = precio;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<Detallecompra> getDetallecompras() {
		return this.detallecompras;
	}

	public void setDetallecompras(Set<Detallecompra> detallecompras) {
		this.detallecompras = detallecompras;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<Cupon> getCupons() {
		return this.cupons;
	}

	public void setCupons(Set<Cupon> cupons) {
		this.cupons = cupons;
	}

}
